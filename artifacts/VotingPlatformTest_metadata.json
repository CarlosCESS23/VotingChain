{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "beforeEach",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testAddCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testCannotStartWithoutCandidates",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testCannotVoteTwice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testCreatePoll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testEndVoting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "testVotingFlow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"testAddCandidate()": {
					"notice": "Testa a adicao de candidatos"
				},
				"testCannotStartWithoutCandidates()": {
					"notice": "Testa que a votacao so pode comecar com candidatos"
				},
				"testCannotVoteTwice()": {
					"notice": "Testa que o mesmo usuario nao pode votar duas vezes"
				},
				"testCreatePoll()": {
					"notice": "Testa a criacao de uma votacao"
				},
				"testEndVoting()": {
					"notice": "Testa encerramento da votação"
				},
				"testVotingFlow()": {
					"notice": "Testa o fluxo completo de votação"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"tests/Voting.t.sol": "VotingPlatformTest"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Voting.sol": {
			"keccak256": "0xff14e8661486efb386d3db1dba371663131aaeec3c5afb343752e8f3d6a9f61b",
			"license": "MIT",
			"urls": [
				"bzz-raw://3173443424d70d79aa5aa110bf7bce51df548d4043e68d74bcc218a1efd07f41",
				"dweb:/ipfs/QmQdUUrriesnsUEKtwoGc6ENVzCwoMSsUhBpJWdmd85fRb"
			]
		},
		"remix_tests.sol": {
			"keccak256": "0xe2783cdc204cba8c72494119339f1d90f9022b15d6c718c668b7f097d8e29787",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bb6a22e64c7f16bcaab63b1c1a1b269d5be8a6d37bdd9dec1718477ab916b18e",
				"dweb:/ipfs/QmdkW1tT5iadBvaHMCoskhDGZKnfdg8o1D9CcoQYtdJet7"
			]
		},
		"tests/Voting.t.sol": {
			"keccak256": "0x72c89d7d02b57b977101aebeadcdeaed715d5662f3806a82b8c3801b8cba5f94",
			"license": "MIT",
			"urls": [
				"bzz-raw://41c1fccc72c0dd1c3af53c039ba0cf07e37d4f51023298bf65a2cea5f9638ca9",
				"dweb:/ipfs/QmUJpmXWw1AyDfAASCNxt6BuwBLooF77GEqoSfxJ3yCKzp"
			]
		}
	},
	"version": 1
}